import chai, { expect } from 'chai'import chaiChange from 'chai-change'import Node from '../src/node'chai.use(chaiChange)describe.only('Node', () => {    'use strict'    const nodeA = new Node({data: 'apple'})    const nodeB = new Node({data: 'banana'})    it('checks to see if Node is a function', () => {        expect(Node).to.be.a('function')    })    context('getData', () => {        it('returns the data ("apple") of the node', () => {            nodeA.getData()            expect(nodeA.data.data).to.equal('apple')        })    })    context('setNext', () => {        it('changes the reference to the next node and returns the original node', () => {            nodeA.setNext(nodeB)            expect(nodeA.next.data.data).to.equal('banana')        })    })    context('getNext()', () => {        it('returns the next node', () => {            expect(nodeA.getNext(nodeB) ).to.equal(nodeA.next)        })        it('return null if no next node', () => {            expect(nodeA.getNext() ).to.equal(null)        })    })})